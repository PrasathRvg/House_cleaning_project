// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using housecleaningApi.Models;

namespace housecleaningApi.Migrations
{
    [DbContext(typeof(housecleaningContext))]
    [Migration("20211116170805_housecleaning")]
    partial class housecleaning
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("housecleaningApi.Models.RoomCost", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id");

                    b.Property<long>("CostPerSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("cost_per_sqft");

                    b.Property<string>("RoomNameSqft")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("room_name_sqft");

                    b.HasKey("RoomId");

                    b.ToTable("room_cost");
                });

            modelBuilder.Entity("housecleaningApi.Models.UserTbl", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<long?>("BathroomSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("bathroom_sqft");

                    b.Property<long?>("BedroomSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("bedroom_sqft");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullname");

                    b.Property<long?>("KitchenSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("kitchen_sqft");

                    b.Property<long?>("LivingRoomSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("living_room_sqft");

                    b.Property<string>("Message")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("message");

                    b.Property<int?>("NoOfBathrooms")
                        .HasColumnType("int")
                        .HasColumnName("no_of_bathrooms");

                    b.Property<int?>("NoOfBedrooms")
                        .HasColumnType("int")
                        .HasColumnName("no_of_bedrooms");

                    b.Property<int?>("NoOfKitchens")
                        .HasColumnType("int")
                        .HasColumnName("no_of_kitchens");

                    b.Property<int?>("NoOfLivingRooms")
                        .HasColumnType("int")
                        .HasColumnName("no_of_living_rooms");

                    b.Property<int?>("NoOfStoreRooms")
                        .HasColumnType("int")
                        .HasColumnName("no_of_store_rooms");

                    b.Property<int?>("NoOfWorshipRooms")
                        .HasColumnType("int")
                        .HasColumnName("no_of_worship_rooms");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phone_no");

                    b.Property<string>("PreferredDays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("preferred_days");

                    b.Property<string>("RequestNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("request_no");

                    b.Property<int>("RmId")
                        .HasColumnType("int")
                        .HasColumnName("rm_id");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("state");

                    b.Property<long?>("StoreRoomSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("store_room_sqft");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("street_address");

                    b.Property<long?>("TotalAmount")
                        .HasColumnType("bigint")
                        .HasColumnName("total_amount");

                    b.Property<long?>("WorshipSqft")
                        .HasColumnType("bigint")
                        .HasColumnName("worship_sqft");

                    b.HasKey("UserId")
                        .HasName("PK_user");

                    b.HasIndex("RmId");

                    b.ToTable("user_tbl");
                });

            modelBuilder.Entity("housecleaningApi.Models.UserTbl", b =>
                {
                    b.HasOne("housecleaningApi.Models.RoomCost", "Rm")
                        .WithMany("UserTbls")
                        .HasForeignKey("RmId")
                        .HasConstraintName("FK_user_room_cost")
                        .IsRequired();

                    b.Navigation("Rm");
                });

            modelBuilder.Entity("housecleaningApi.Models.RoomCost", b =>
                {
                    b.Navigation("UserTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
